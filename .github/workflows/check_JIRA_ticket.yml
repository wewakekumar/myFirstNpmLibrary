name: Check JIRA

on:
  pull_request:
    types:
      - opened
      - reopened
      - edited
      - synchronize
      - ready_for_review
      - labeled

jobs:
  detect:
    name: Detect JIRA ticket
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Detect JIRA ticket
        uses: actions/github-script@v7
        id: detect
        with:
          script: |
            const issueIdRegEx = /([a-zA-Z0-9]+-[0-9]+)/g
            
            const pullRequest = context.payload.pull_request;
            const headBranch = pullRequest.head.ref;
            const prBody = pullRequest.body;
            const prTitle = pullRequest.title;

            const branchMatch = headBranch.match(issueIdRegEx);
            const bodyMatch = prBody.match(issueIdRegEx);
            const titleMatch = prTitle.match(issueIdRegEx);

            if (branchMatch || bodyMatch || titleMatch) {
              const JIRATickets = Array.from(new Set([...(branchMatch || []), ...(bodyMatch || []), ...(titleMatch || [])]));

              if (JIRATickets.length > 0) {
                core.setFailed(`More than one JIRA ticket found. \n Tikcets found are ${JIRATickets.join("\n")}`);
              }
            } else {
              core.setFailed(`Couldn't find JIRA tikcet in the PR`);
            }
            
      - name: Verify JIRA
        id: verify
        uses: actions/github-script@v7
        env:
          JIRA_PAT: ${{ secrets.JIRA_PAT }}
        with:
          script: |
            const JIRA_TOKEN = `vivekrajwe1@gmail.com:${process.env.JIRA_PAT}`;

            const encodedJIRAToken = `${Buffer.from(JIRA_TOKEN).toString('base64')}`;
            
            fetch('https://vivekrajwe1.atlassian.net/rest/api/2/issue/CRM-3', {
              method: 'GET',
              headers: {
                'Authorization': `Basic ${encodedJIRAToken}`,
                'Accept': 'application/json'
              }
            })
              .then(response => {
                console.log(
                  `Response: ${response.status} ${response.statusText}`
                );
                return response.text();
              })
              .then(text => {
                const jsonText = JSON.parse(text);
                console.log("#json", jsonText);
              })
              .catch(err => console.error("#error", err));
